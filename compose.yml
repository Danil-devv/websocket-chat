version: "3.8"

services:
  webserver:
    container_name: websocket-chat-server
    build:
      dockerfile: ./server/Dockerfile
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    expose:
      - "${SERVER_PORT}"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - db
      - redis
      - kafka1
      - kafka2
      - kafka3
      - zookeeper
      - storage

  storage:
    build:
      dockerfile: ./storage/Dockerfile
    depends_on:
      - db
      - redis
      - kafka1
      - kafka2
      - kafka3
      - zookeeper

  db:
    container_name: websocket-chat-db
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    expose:
      - "${POSTGRES_PORT}"
    volumes:
      - ./migrations:/docker-entrypoint-initdb.d
      - websocket-chat-data:/var/lib/postgresql/data

  redis:
    image: redis:7.2.4
    restart: always
    ports:
      - "6379:6379"
    expose:
      - "6379"
    environment:
      - REDIS_PORT=6379
      - REDIS_DATABASES=16

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3

  kafka2:
      image: confluentinc/cp-kafka:7.3.2
      depends_on:
        - zookeeper
      ports:
        - "29093:29092"
      environment:
        KAFKA_BROKER_ID: 2
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29093
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3

  kafka3:
    image: confluentinc/cp-kafka:7.3.2
    depends_on:
      - zookeeper
    ports:
      - "29094:29092"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8090:8080"
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:29092,kafka2:29093,kafka3:29094
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - zookeeper

volumes:
  websocket-chat-data:
