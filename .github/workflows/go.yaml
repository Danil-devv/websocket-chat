# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 'stable'

      - name: Build-Server
        working-directory: ./server
        run: |
          go mod tidy
          go build -v ./...

      - name: Lint-Server
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: ./server

      - name: Test-Server
        working-directory: ./server
        run: |
          go mod tidy
          go test -v -race -coverpkg=./... ./...


      - name: Build-Client
        working-directory: ./client
        run: |
          go mod tidy
          go build -v ./...

      - name: Lint-Client
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: ./client

      - name: Test-Client
        working-directory: ./client
        run: |
          go mod tidy
          go test -v -race -coverpkg=./... ./...

      - name: Build-Storage
        working-directory: ./storage
        run: |
          go mod tidy
          go build -v ./...

      - name: Lint-Storage
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: ./storage

      - name: Test-Storage
        working-directory: ./storage
        run: |
          go mod tidy
          go test -v -race -coverpkg=./... ./...